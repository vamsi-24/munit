<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="multiple_methods-suite.xml" />
	<munit:test name="post:\method:multiple_methods-config-test" doc:id="a48e33fe-00e2-4212-a289-e1ce7418de13" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="6b5a3e65-dda4-47f0-bd18-4dcb9af51ebd" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://postmethodmultiplemethodsconfigtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://postmethodmultiplemethodsconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postmethodmultiplemethodsconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\method:multiple_methods-config" doc:id="1d7dac66-8065-475b-8c12-e151a69fbee3" name="post:\method:multiple_methods-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="ab185137-baaa-49e2-a92a-407b1db3e6fc" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postmethodmultiplemethodsconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\method:multiple_methods-config-test" doc:id="2632ba3b-5159-4a61-8318-80a8eabd7188" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="a8d52bca-6eb5-479d-a78b-f416a9eb275f" >
				<munit:payload value="#[readUrl('classpath://getmethodmultiplemethodsconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getmethodmultiplemethodsconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getmethodmultiplemethodsconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\method:multiple_methods-config" doc:id="50de7b9d-c65a-470c-a560-f31b2983ec34" name="get:\method:multiple_methods-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="1fed6a65-6b76-4c41-bd1b-c59e6ad2b7d5" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getmethodmultiplemethodsconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="delete:\method:multiple_methods-config-test" doc:id="fc5c8ca8-39a7-4f29-910a-c90c23d32a31" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="fa684426-a3df-49ca-bfa6-7d591888a526" >
				<munit:payload value="#[readUrl('classpath://deletemethodmultiplemethodsconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://deletemethodmultiplemethodsconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://deletemethodmultiplemethodsconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to delete:\method:multiple_methods-config" doc:id="4094f660-41ba-4144-8e1d-22dea216dd54" name="delete:\method:multiple_methods-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="8dbd0f3b-f33e-4c39-88ae-85040b4cadf1" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import deletemethodmultiplemethodsconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="put:\method:multiple_methods-config-test" doc:id="dc9263d7-4919-4a73-8abe-2d6bfd8ba066" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="45ffa50a-80a8-4509-91af-7d793909a5f4" >
				<munit:payload value="#[readUrl('classpath://putmethodmultiplemethodsconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://putmethodmultiplemethodsconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://putmethodmultiplemethodsconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to put:\method:multiple_methods-config" doc:id="01ce4131-72b9-43f2-9c16-2999d19c047e" name="put:\method:multiple_methods-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="c838d268-fb20-42a4-9f11-849fb89d4f50" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import putmethodmultiplemethodsconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
